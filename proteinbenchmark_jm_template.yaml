apiVersion: v1
kind: Pod
metadata:
  name: proteinbenchmark-jm
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              # Require compatibility with CUDA 12.4
              # This version needs to be specified in the dockerfile `FROM` and
              # `RUN micromamba install` lines too
              # Check the version used by NRP nodes with:
              # kubectl get nodes -L nvidia.com/gpu.product,nvidia.com/cuda.runtime.major,nvidia.com/cuda.runtime.minor -l nvidia.com/gpu.product
              - key: nvidia.com/cuda.runtime.major
                operator: In
                values:
                  - "12"
              - key: nvidia.com/cuda.runtime.minor
                operator: In
                values:
                  - "4"
  initContainers:
    - name: proteinbenchmark-jm-init-git
      image: alpine/git
      resources:
        limits:
          memory: "100Mi"
          cpu: "100m"
        requests:
          memory: "100Mi"
          cpu: "100m"
      command:
        - "/bin/sh"
        - "-c"
        - |
          set -euf
          cd /opt/repo
          git clone https://github.com/Yoshanuikabundi/proteinbenchmark-nrp.git /opt/repo || true
          git checkout $SCRIPT_COMMIT
      volumeMounts:
        - mountPath: /opt/repo
          name: repo-vol
    - name: proteinbenchmark-jm-init-rclone
      image: rclone/rclone
      resources:
        limits:
          memory: "100Mi"
          cpu: "100m"
        requests:
          memory: "100Mi"
          cpu: "100m"
      env:
        - name: RCLONE_CONFIG
          value: /secrets/rclone.conf
      command:
        - "/bin/sh"
        - "-c"
        - |
          set -euf
          rclone copy nrp-internal:proteinbenchmark-jm-bucket/results /results
          ls /results
          ls /results/gb3-null-0.0.3-pair-opc3/setup/
          chmod -R 777 /results
      volumeMounts:
        - mountPath: /results
          name: results-vol
        - name: rclone-config
          mountPath: /secrets/rclone.conf
          subPath: rclone.conf
  containers:
    - name: proteinbenchmark-jm
      # image: gitlab-registry.nrp-nautilus.io/josh.mitchell/proteinbenchmark-nrp:latest
      image: ghcr.io/lilyminium/openff-images:proteinbenchmark-simulation-nagl-rclone-cuda12.4
      resources:
        limits:
          memory: "5Gi"
          cpu: "1"
          nvidia.com/gpu: 1
        requests:
          memory: "5Gi"
          cpu: "1"
          nvidia.com/gpu: 1
      volumeMounts:
        - name: rclone-config
          mountPath: /secrets/rclone.conf
          subPath: rclone.conf
        - name: openeye-license
          mountPath: /secrets/oe_license.txt
          subPath: oe_license.txt
        - mountPath: /opt/repo
          name: repo-vol
        - mountPath: /results
          name: results-vol
      env:
        - name: OE_LICENSE
          value: /secrets/oe_license.txt
        - name: RCLONE_CONFIG
          value: /secrets/rclone.conf
      command:
        - micromamba
        - run
        - -n
        - base
        - python
        - /opt/repo/$(SCRIPT_PATH)
        - -f$(FF)
        - -t$(TARGET)
        - -r$(REPLICA)
        - -w$(WINDOW)
        - -o/results
      lifecycle:
        preStop:
          exec:
            command:
              - rclone
              - copy
              - /results
              - nrp-internal:proteinbenchmark-jm-bucket/results
  volumes:
    - name: rclone-config
      secret:
        secretName: jm-rclone-config
    - name: openeye-license
      secret:
        secretName: oe-license-feb-2024
    - name: repo-vol
      emptyDir: {}
    - name: results-vol
      emptyDir: {}
